# Cartelle e documenti {#sec-apx-files}

## Introduzione

I file su un computer sono organizzati tramite una struttura gerarchica chiamata **struttura ad albero**, costituita da cartelle (o directory) e file. Questa organizzazione permette una gestione ordinata e intuitiva delle informazioni.  

- **Radice (Root)**: È il punto più alto dell’albero da cui partono tutte le ramificazioni.
- **Cartelle/Directory**: Contenitori che possono includere file o altre cartelle.
- **File**: Gli elementi finali che contengono dati.

## Unix/Linux/macOS
Nei sistemi Unix, l’albero ha una struttura chiara che inizia sempre dalla **radice** indicata con lo slash `/`.

Esempio semplificato:

```
/
├── bin             # programmi di sistema essenziali
├── etc             # file di configurazione
├── home            # cartelle personali degli utenti
│   └── utente
│       ├── Documenti
│       ├── Immagini
│       └── Scaricati
├── usr             # applicazioni e librerie utente
├── var             # dati variabili come log e cache
└── tmp             # file temporanei
```

Nei sistemi Unix i percorsi dei file si scrivono utilizzando lo slash (`/`), ad esempio:
```
/home/utente/Documenti/tesi.docx
```

## Windows
Windows organizza i file in maniera simile ma partendo da una o più unità (dischi), tipicamente indicate da lettere come `C:`, `D:`, ecc. La radice di ogni albero corrisponde quindi all’unità disco.

Esempio semplificato:

```
C:\
├── Program Files   # applicazioni installate
├── Windows         # sistema operativo e file di sistema
├── Utenti          # dati degli utenti
│   └── utente
│       ├── Documenti
│       ├── Immagini
│       └── Download
└── Temp            # file temporanei
```

Nei sistemi Windows i percorsi dei file si scrivono utilizzando il backslash (`\`), ad esempio:

```
C:\Utenti\utente\Documenti\tesi.docx
```

## Principali Comandi

Qui sotto viene presentata una panoramica sintetica dei principali comandi per gestire la struttura ad albero di file e cartelle nei sistemi Unix (Linux e macOS) e Windows.

### Unix/Linux/macOS (Terminale Bash o zsh)

| Comando      | Funzione                                         | Esempio                                    |
|--------------|--------------------------------------------------|--------------------------------------------|
| `pwd`        | Mostra la cartella corrente (**Print Working Directory**) | `pwd` → `/home/utente/Documenti`           |
| `cd`         | Cambia la cartella corrente (**Change Directory**)       | `cd /home/utente/Scaricati`                |
| `ls`         | Elenca il contenuto di una cartella (**List**)           | `ls` o `ls -l`                             |
| `mkdir`      | Crea una nuova cartella (**Make Directory**)             | `mkdir nuova_cartella`                     |
| `mv`         | Sposta o rinomina file/cartelle (**Move**)               | `mv file.txt Documenti/` oppure `mv vecchio.txt nuovo.txt` |
| `cp`         | Copia file/cartelle (**Copy**)                           | `cp file.txt copia_file.txt`               |
| `rm`         | Rimuove file (**Remove**)                                | `rm file.txt`                              |
| `rmdir`      | Rimuove una cartella vuota (**Remove Directory**)        | `rmdir cartella_vuota`                     |
| `whoami`     | Mostra l'utente corrente                                 | `whoami` → `utente`                        |

Esempio di uso dei comandi:

```bash
pwd
cd /home/utente
mkdir nuovo
cd nuovo
touch prova.txt
ls
mv prova.txt ../Documenti
cd ../Documenti
cp prova.txt copia_prova.txt
rm prova.txt
whoami
```

### Windows (Prompt dei comandi, CMD)

| Comando      | Funzione                                                   | Esempio                                  |
|--------------|------------------------------------------------------------|------------------------------------------|
| `cd`         | Cambia la cartella corrente (**Change Directory**)         | `cd C:\Utenti\utente\Documenti`          |
| `cd`         | Mostra la cartella corrente                                | `cd` → `C:\Utenti\utente\Documenti`      |
| `dir`        | Elenca il contenuto della cartella                         | `dir`                                    |
| `mkdir`      | Crea una nuova cartella                                    | `mkdir nuova_cartella`                   |
| `move`       | Sposta o rinomina file/cartelle                            | `move file.txt Documenti\` o `move vecchio.txt nuovo.txt` |
| `copy`       | Copia file                                                 | `copy file.txt copia_file.txt`           |
| `del`        | Rimuove file                                               | `del file.txt`                           |
| `rmdir`      | Rimuove cartella vuota                                     | `rmdir cartella_vuota`                   |
| `whoami`     | Mostra l'utente corrente                                   | `whoami` → `utente`                      |

Esempio di uso dei comandi:

```cmd
cd C:\Utenti\utente
mkdir nuovo
cd nuovo
echo prova > prova.txt
dir
move prova.txt ..\Documenti
cd ..\Documenti
copy prova.txt copia_prova.txt
del prova.txt
whoami
```

**Nota finale.**  
Entrambi i sistemi operativi consentono operazioni simili, ma hanno sintassi e convenzioni leggermente diverse. Questi comandi di base permettono una gestione essenziale e rapida della struttura ad albero.

## Conclusioni {.unnumbered}

In sintesi, entrambi i sistemi operativi utilizzano una struttura ad albero per facilitare la gestione, la navigazione e l'organizzazione dei file e delle cartelle. Cambiano principalmente la notazione (`/` o `\`) e la gestione della radice (una singola radice `/` in Unix, più radici contrassegnate da lettere come `C:` in Windows).


